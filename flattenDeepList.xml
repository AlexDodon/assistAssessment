<problem>
<text>
Write a function : which takes one argument , a deep list , and resturns a flatten list , Order matters ,first take elements from nested lists.

</text>
<example language="Python">
flatten([[[1, 2, 3], [4, 5]], 6])
</example>
<solution language="Python">
def flatten(L):
    return list(flattenA(L))
    
def flattenA(L):
    for item in L:
        try:
            yield from flatten(item)
        except TypeError:
            yield item
</solution>
<tests language="Python">
flatten([[[1, 2, 3], [4, 5]], 6])
flatten([[[2, 3, 4], [5, 6]], 7])
flatten([[[3, 4, 5], [6, 7]], 8])
flatten([[[4, 5, 6], [7, 8]], 9])
flatten([[[5, 6, 7], [8, 9]], 10])
</tests>
</problem>